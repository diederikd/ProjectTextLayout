package TextLayout.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptCellLayout_Text = createDescriptorForCellLayout_Text();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, "jetbrains.mps.lang.editor");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCellLayout_Text);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.CellLayout_Text:
        return myConceptCellLayout_Text;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForCellLayout_Text() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TextLayout", "CellLayout_Text", 0xb450d771cec746d2L, 0xa9cde0e2d81c270aL, 0x19a908b9f02c88f3L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.editor.structure.CellLayout", 0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10192dc11caL);
    b.origin("r:34227468-0e0e-4a67-acad-8783b49c8b5f(TextLayout.structure)/1849018716703721715");
    b.version(2);
    b.alias("text");
    return b.create();
  }
}
