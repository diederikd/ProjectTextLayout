package ExampleLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptDocument = createDescriptorForDocument();
  /*package*/ final ConceptDescriptor myConceptWord = createDescriptorForWord();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptDocument, myConceptWord);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Document:
        return myConceptDocument;
      case LanguageConceptSwitch.Word:
        return myConceptWord;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForDocument() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ExampleLanguage", "Document", 0x4c0e5105e3e24e0cL, 0xa4f94fbda094b11bL, 0x73c8d9901726cf42L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:90108b11-3ee6-482a-95fb-ad8e11abc2a7(ExampleLanguage.structure)/8343157522590781250");
    b.version(2);
    b.aggregate("words", 0x73c8d9901726cf48L).target(0x4c0e5105e3e24e0cL, 0xa4f94fbda094b11bL, 0x73c8d9901726cf45L).optional(true).ordered(true).multiple(true).origin("8343157522590781256").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWord() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ExampleLanguage", "Word", 0x4c0e5105e3e24e0cL, 0xa4f94fbda094b11bL, 0x73c8d9901726cf45L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:90108b11-3ee6-482a-95fb-ad8e11abc2a7(ExampleLanguage.structure)/8343157522590781253");
    b.version(2);
    return b.create();
  }
}
